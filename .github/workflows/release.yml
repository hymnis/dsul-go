name: Release

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    strategy:
     matrix:
       os: [ ubuntu-latest, windows-latest, macOS-latest ]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Test
      run: |
        go test -v ./...
      shell: bash

    - name: Create artifacts directory
      run: mkdir -p ./artifacts
      shell: bash

    - name: Build amd64
      run: |
        CURRENT_OS=$(go env GOOS)
        GOARCH=amd64 go build -v -ldflags "-X main.version=$(head -1 ./cmd/dsuld/VERSION) -X main.sha1=$(git rev-parse HEAD) -X main.buildTime=$(date +'%Y-%m-%d_%T')" -o ./artifacts/dsuld-amd64-$CURRENT_OS ./cmd/dsuld/main.go
        GOARCH=amd64 go build -v -ldflags "-X main.version=$(head -1 ./cmd/dsulc/VERSION) -X main.sha1=$(git rev-parse HEAD) -X main.buildTime=$(date +'%Y-%m-%d_%T')" -o ./artifacts/dsulc-amd64-$CURRENT_OS ./cmd/dsulc/main.go
      shell: bash

    - name: Build 386
      if: matrix.os != 'macOS-latest'
      run: |
        CURRENT_OS=$(go env GOOS)
        GOARCH=386 go build -v -ldflags "-X main.version=$(head -1 ./cmd/dsuld/VERSION) -X main.sha1=$(git rev-parse HEAD) -X main.buildTime=$(date +'%Y-%m-%d_%T')" -o ./artifacts/dsuld-386-$CURRENT_OS ./cmd/dsuld/main.go
        GOARCH=386 go build -v -ldflags "-X main.version=$(head -1 ./cmd/dsulc/VERSION) -X main.sha1=$(git rev-parse HEAD) -X main.buildTime=$(date +'%Y-%m-%d_%T')" -o ./artifacts/dsulc-386-$CURRENT_OS ./cmd/dsulc/main.go
      shell: bash

    - name: Build arm64
      run: |
        CURRENT_OS=$(go env GOOS)
        GOARCH=arm64 go build -v -ldflags "-X main.version=$(head -1 ./cmd/dsuld/VERSION) -X main.sha1=$(git rev-parse HEAD) -X main.buildTime=$(date +'%Y-%m-%d_%T')" -o ./artifacts/dsuld-arm64-$CURRENT_OS ./cmd/dsuld/main.go
        GOARCH=arm64 go build -v -ldflags "-X main.version=$(head -1 ./cmd/dsulc/VERSION) -X main.sha1=$(git rev-parse HEAD) -X main.buildTime=$(date +'%Y-%m-%d_%T')" -o ./artifacts/dsulc-arm64-$CURRENT_OS ./cmd/dsulc/main.go
      shell: bash

    - name: Build arm
      if: matrix.os != 'macOS-latest'
      run: |
        CURRENT_OS=$(go env GOOS)
        GOARCH=arm go build -v -ldflags "-X main.version=$(head -1 ./cmd/dsuld/VERSION) -X main.sha1=$(git rev-parse HEAD) -X main.buildTime=$(date +'%Y-%m-%d_%T')" -o ./artifacts/dsuld-arm-$CURRENT_OS ./cmd/dsuld/main.go
        GOARCH=arm go build -v -ldflags "-X main.version=$(head -1 ./cmd/dsulc/VERSION) -X main.sha1=$(git rev-parse HEAD) -X main.buildTime=$(date +'%Y-%m-%d_%T')" -o ./artifacts/dsulc-arm-$CURRENT_OS ./cmd/dsulc/main.go
      shell: bash

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: ./artifacts/dsul*
        if-no-files-found: error

    - name: Finish
      run: |
        echo ":rocket: Build complete!" >> $GITHUB_STEP_SUMMARY
